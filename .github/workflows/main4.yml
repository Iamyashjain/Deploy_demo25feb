name: Pipeline Demo

on:
  push:
    branches:
      - master

jobs:
  test-case:
    runs-on: ubuntu-latest

    steps:
      - name: Take code
        uses: actions/checkout@v2

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: run test cases
        run: |

          pip install -r requirements.txt
          pytest .
  build-and-push-docker:
      runs-on: ubuntu-latest
      needs: test-case
      steps:
        - name: Checkout Code
          uses: actions/checkout@v2

        - name: Login to Docker Hub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME}}
            password: ${{ secrets.DOCKER_PASS}}
      
        - name: Build Docker Image
          run: |
             docker build -t ${{ secrets.DOCKER_USERNAME }}/myapp:latest .o 
        
        - name: Push Docker Image to Docker Hub
          run: |
            docker push ${{ secrets.DOCKER_USERNAME }}/myapp:latest
            
  deploy-stage:
    runs-on: ubuntu-latest
    needs: build-and-push-docker

    steps:
      

      - name: Setup SSH Agent
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy to VM
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@3.82.115.27 << 'EOF'
          set -e  # Exit on any command failure

          docker pull ${{ secrets.DOCKER_USERNAME }}/myapp:latest

          docker stop myapp-container || true
          docker rm myapp-container || true

          docker run -d -p 8080:8080 --name myapp-container ${{ secrets.DOCKER_USERNAME }}/myapp:latest




          EOF
